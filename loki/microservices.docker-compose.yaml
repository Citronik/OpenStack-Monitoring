version: "3.8"

networks:
  loki:

volumes:
  prometheus:
  grafana:
  alertmanager-data:

services:
  # Since the Loki containers are running as user 10001 and the mounted data volume is owned by root,
  # Loki would not have permissions to create the directories.
  # Therefore the init container changes permissions of the mounted directory.
  init:
    image: &lokiImage grafana/loki:2.9.2
    user: root
    entrypoint:
      - "chown"
      - "10001:10001"
      - "/loki"
    volumes:
      - /mnt/loki/data:/loki
    networks:
      - loki

  grafana:
    image: grafana/grafana:9.1.6
    ports:
      - "3000:3000"
    environment:
      # - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_AUTH_ANONYMOUS_ENABLED=false
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    volumes:
      - ./config/datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yml
      - grafana:/var/lib/grafana
    healthcheck:
      test: [ "CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3000/api/health || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - loki

  prometheus:
    image: prom/prometheus:v2.27.0
    ports:
      - "9090:9090"
    volumes:
      - ./config/prometheus.yaml:/etc/prometheus/prometheus.yml
      - prometheus:/prometheus
    command:
      [
        '--log.level=debug',
        '--config.file=/etc/prometheus/prometheus.yml',
        '--enable-feature=remote-write-receiver',
        '--query.lookback-delta=30s'
      ]
    healthcheck:
      test: [ "CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:9090/-/healthy || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
    depends_on:
      - loki-read
      - loki-write
      - loki-backend
      - promtail
      - grafana
      - alertmanager
      - minio
      - openstack-exporter
    networks:
      - loki

  promtail:
    image: grafana/promtail:2.9.2
    volumes:
      # - ./loki/:/var/log/ # for testing purposes only, disable in production
      - ./config:/etc/promtail/
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "9080:9080"
    command: -config.file=/etc/promtail/promtail.yaml
    networks:
      - loki

  minio:
    image: minio/minio
    entrypoint:
      - sh
      - -euc
      - |
        mkdir -p /data/loki-data && \
        mkdir -p /data/loki-ruler &&
        minio server --address "0.0.0.0:9000" --console-address "0.0.0.0:9001" /data
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
      - MINIO_PROMETHEUS_AUTH_TYPE=public
      - MINIO_UPDATE=off
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - /mnt/loki/minio:/data
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 15s
      timeout: 20s
      retries: 5
    networks:
      - loki

  loki-gateway:
    image: nginx:1.19
    volumes:
      - ./config/nginx.conf:/etc/nginx/nginx.conf
    entrypoint:
      - sh
      - -euc
      - /docker-entrypoint.sh nginx -g "daemon off;"
    ports:
      - "80:80"
      - "3100"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/healthy"]
      interval: 10s
      timeout: 5s
      retries: 5
    depends_on:
      - loki-read
      - loki-write
      - loki-backend
      - promtail
      - prometheus
      - grafana
      - alertmanager
      - minio
    networks:
      - loki

  loki-read:
    image: *lokiImage
    volumes:
      - ./config:/etc/loki/
      - /mnt/loki/data:/loki
    # only needed for interactive debugging with dlv
    # cap_add:
    #   - SYS_PTRACE
    # security_opt:
    #   - apparmor=unconfined
    ports:
      - "3100"
      - "7946"
      # uncomment to use interactive debugging
      # - "40000-40002:40000" # makes the replicas available on ports 40000, 40001, 40002
      # -config.expand-env=true should replace ${ENV_VAR} with the value of the environment variable
      # but this option is not working, instead using env var directly in the config file
    command: "-config.file=/etc/loki/loki.yaml -config.expand-env=true -target=read -legacy-read-mode=false"
    networks:
      - loki
    restart: always
    healthcheck:
      test: [ "CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3100/ready || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
    depends_on:
      - minio
    deploy:
      mode: replicated
      replicas: 3

  loki-write:
    image: *lokiImage
    volumes:
      - ./config:/etc/loki/
      - /mnt/loki/data:/loki
    # only needed for interactive debugging with dlv
    # cap_add:
    #   - SYS_PTRACE
    # security_opt:
    #   - apparmor=unconfined
    ports:
      - "3100"
      - "7946"
      # uncomment to use interactive debugging
      # - "50000-50002:40000" #  makes the replicas available on ports 50000, 50001, 50002
    command: "-config.file=/etc/loki/loki.yaml -config.expand-env=true -target=write"
    networks:
      - loki
    restart: always
    healthcheck:
      test: [ "CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3100/ready || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
    depends_on:
      - minio
    deploy:
      mode: replicated
      replicas: 3

  loki-backend:
    image: *lokiImage
    volumes:
      - ./config:/etc/loki/
      - ./rules:/loki/rules:ro
      - /mnt/loki/data:/loki
    # only needed for interactive debugging with dlv
    # cap_add:
    #   - SYS_PTRACE
    # security_opt:
    #   - apparmor=unconfined
    ports:
      - "3100"
      - "7946"
      # uncomment to use interactive debugging
      # - "60000-60002:40000" #  makes the replicas available on ports 60000, 60001, 60002
    command: "-config.file=/etc/loki/loki.yaml -config.expand-env=true -target=backend -legacy-read-mode=false"
    networks:
      - loki
    restart: always
    healthcheck:
      test: [ "CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3100/ready || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
    depends_on:
      - minio
    deploy:
      mode: replicated
      replicas: 3

  # alertmanager to enable receiving alerts
  alertmanager:
    image: prom/alertmanager:v0.23.0
    restart: unless-stopped
    ports:
      - "9093:9093"
    volumes:
      - "./config:/config"
      - alertmanager-data:/data
    command: --config.file=/config/alertmanager.yaml --log.level=debug
    depends_on:
      - minio
    networks:
      - loki

  openstack-exporter:
    image: ghcr.io/openstack-exporter/openstack-exporter:latest
    volumes:
      - ./config/clouds.yaml:/etc/openstack/clouds.yaml
    restart: unless-stopped
    command: "--os-client-config /etc/openstack/clouds.yaml --log.level=debug KIS"
    ports:
      - "9180:9180"
    env_file:
      - ./.env

  # for testing purposes only, disable in production
  # log-generator:
  #   image: mingrammer/flog
  #   command:
  #     - --loop
  #     - --format=json
  #     - --number=10 # number of log lines to generate per second
  #     - --delay=100ms # delay between log lines
  #     - --output=/var/log/generated-logs.txt
  #     - --overwrite
  #     - --type=log
  #   volumes:
  #     - ./.loki/:/var/log/